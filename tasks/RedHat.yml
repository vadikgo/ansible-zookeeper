---
- name: Install OS Packages
  yum: name={{ item }} state=present
  with_items:
    - libselinux-python

- group: name=zookeeper system=yes
- user: name=zookeeper group=zookeeper system=yes

- name: Download and unpack zookeeper
  unarchive:
    src: "{{zookeeper_url}}"
    dest: "{{zookeeper_dir}}"
    copy: no
    owner: zookeeper
    group: zookeeper
    creates: "{{zookeeper_dir}}/bin"

- name: Change ownership on zookeeper directory.
  file: path={{zookeeper_dir}} state=directory owner=zookeeper group=zookeeper recurse=yes
  tags: bootstrap

- name: Create zookeeper data folder.
  file: path={{data_dir}} state=directory recurse=yes owner=zookeeper group=zookeeper
  tags: bootstrap

- name: Create zookeeper logs folder.
  file: path={{log_dir}} state=directory recurse=yes owner=zookeeper group=zookeeper
  tags: bootstrap

- name: Check if /etc/init exists
  stat: path=/etc/init/
  register: etc_init

- name: Upstart script.
  template: src=zookeeper.conf.j2 dest=/etc/init/zookeeper.conf
  when: etc_init.stat.exists == true
  tags: deploy
  notify:
    - Restart zookeeper

- name: Check if systemd exists
  stat: path=/usr/lib/systemd/system/
  register: systemd_check

- name: Systemd script.
  template: src=zookeeper.service.j2 dest=/usr/lib/systemd/system/zookeeper.service
  when: systemd_check.stat.exists == true
  tags: deploy
  notify:
    - Restart zookeeper

- name: Write myid file.
  template: src=myid.j2 dest={{data_dir}}/myid owner=zookeeper group=zookeeper
  tags: deploy
  notify:
    - Restart zookeeper

- name: Configure zookeeper
  template: src=zoo.cfg.j2 dest={{ zookeeper_dir }}/conf/zoo.cfg owner=zookeeper group=zookeeper
  tags: deploy
  notify:
    - Restart zookeeper

- name: Start zookeeper
  service: name=zookeeper state=started
  tags: deploy
